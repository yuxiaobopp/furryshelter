
服务结构：
nginx-nginx  负责通过nginx+域名 定位 转发到 50001 和 50002 两个端口（...可继续配置新的站点）
nginx-admin 50001 通过nginx 挂载后台接口服务网站
nginx-front 50002 通过nginx 挂载c端用户站点
...可继续配置新的站点


server {    
listen       80;    
server_name  www.furryshelter.com;  #admin.furryshelter.com;    ...+可继续配置新的站点
include log_format.conf;        
	location / {        
		root   /usr/share/nginx/html;        
		index  index.html index.htm;    
	}
}


docker 命令
后台web
docker run --name nginx-admin -p 50001:80 -v /usr/local/nginx/html/dist/:/usr/share/nginx/html  -v /usr/local/nginx/conf/nginx.conf:/etc/nginx/nginx.conf  -v /usr/local/nginx/logs/:/var/log/nginx  -v /usr/local/nginx/conf.d:/etc/nginx/conf.d  -v /usr/local/nginx/conf/log_format.conf:/etc/nginx/log_format.conf -d nginx:latest


C端web
docker run --name nginx-front -p 50002:80 -v /usr/local/nginxfront/html/dist/:/usr/share/nginx/html  -v /usr/local/nginxfront/conf/nginx.conf:/etc/nginx/nginx.conf  -v /usr/local/nginxfront/logs/:/var/log/nginx  -v /usr/local/nginxfront/conf.d:/etc/nginx/conf.d  -v /usr/local/nginxfront/conf/log_format.conf:/etc/nginx/log_format.conf -d nginx:latest

反向代理
docker run --name nginx-nginx -p 80:80 -v /usr/local/nginx-reverse-proxy/html/:/usr/share/nginx/html  -v /usr/local/nginx-reverse-proxy/conf/nginx.conf:/etc/nginx/nginx.conf  -v /usr/local/nginx-reverse-proxy/logs/:/var/log/nginx  -v /usr/local/nginx-reverse-proxy/conf.d:/etc/nginx/conf.d  -v /usr/local/nginx-reverse-proxy/conf/log_format.conf:/etc/nginx/log_format.conf -d nginx:latest



mysql:
docker run -p 3306:3306 --name mysql \
-v /usr/local/mysql/conf:/etc/mysql \
-v /usr/local/mysql/logs:/var/log/mysql \ 
-v /usr/local/mysql/data:/var/lib/mysql \
-e MYSQL_ROOT_PASSWORD=fUrryshelter_db68_$#@justd \
-d mysql:latest
 
docker run -itd --name mysql-m -p 3306:3306 -v /usr/local/mysql/data:/var/lib/mysql/ -e MYSQL_ROOT_PASSWORD=123456 mysql:latest
docker run -itd --name mysql-m -p 3306:3306 -v /usr/local/mysql/data:/var/lib/mysql/ -e MYSQL_ROOT_PASSWORD=fUrryshelter_db68_$#@justd mysql:latest

进入数据库容器
apt-get update
apt-get install vim

vim /etc/mysql/my.cnf
最后一行加:skip-grant-tables


flush privileges;
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'fUrryshelter_db68_$#@justd';


注释掉skip-grant-tables

create database FurryshelterAdmin;

grant all privileges on FurryshelterAdmin.* to root@'localhost';
flush privileges;


导入数据
docker cp /root/sql/MySQL.sql mysql-m:/

进入数据库容器
use FurryshelterAdmin;
source /MySQL.sql;


重新部署.netcore
cd /root
/bin/bash /root/publish.sh

.netcore内网连接docker mysql
docker network create -d bridge mysqlbridge
docker network rm mysqlbridge
docker network connect mysqlbridge mysql-m

/bin/bash /root/publish.sh